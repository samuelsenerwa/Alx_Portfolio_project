{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setPosition = exports.getPosition = exports.isKeyboardEvent = exports.defaultStatusFormatter = exports.noop = void 0;\nvar _react = require(\"react\");\nvar _CSSTranslate = _interopRequireDefault(require(\"../../CSSTranslate\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar noop = function noop() {};\nexports.noop = noop;\nvar defaultStatusFormatter = function defaultStatusFormatter(current, total) {\n  return \"\".concat(current, \" of \").concat(total);\n};\nexports.defaultStatusFormatter = defaultStatusFormatter;\nvar isKeyboardEvent = function isKeyboardEvent(e) {\n  return e ? e.hasOwnProperty('key') : false;\n};\n/**\n * Gets the list 'position' relative to a current index\n * @param index\n */\n\nexports.isKeyboardEvent = isKeyboardEvent;\nvar getPosition = function getPosition(index, props) {\n  if (props.infiniteLoop) {\n    // index has to be added by 1 because of the first cloned slide\n    ++index;\n  }\n  if (index === 0) {\n    return 0;\n  }\n  var childrenLength = _react.Children.count(props.children);\n  if (props.centerMode && props.axis === 'horizontal') {\n    var currentPosition = -index * props.centerSlidePercentage;\n    var lastPosition = childrenLength - 1;\n    if (index && (index !== lastPosition || props.infiniteLoop)) {\n      currentPosition += (100 - props.centerSlidePercentage) / 2;\n    } else if (index === lastPosition) {\n      currentPosition += 100 - props.centerSlidePercentage;\n    }\n    return currentPosition;\n  }\n  return -index * 100;\n};\n/**\n * Sets the 'position' transform for sliding animations\n * @param position\n * @param forceReflow\n */\n\nexports.getPosition = getPosition;\nvar setPosition = function setPosition(position, axis) {\n  var style = {};\n  ['WebkitTransform', 'MozTransform', 'MsTransform', 'OTransform', 'transform', 'msTransform'].forEach(function (prop) {\n    // @ts-ignore\n    style[prop] = (0, _CSSTranslate.default)(position, '%', axis);\n  });\n  return style;\n};\nexports.setPosition = setPosition;","map":null,"metadata":{},"sourceType":"script"}